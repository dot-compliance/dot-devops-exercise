pipeline {
    agent any
    parameters {
        string(name: 'TARGET_DIR',     defaultValue: 'TargetDeploy', description: 'Where to deploy to?')
        string(name: 'MEMBER_PACKAGE', defaultValue: 'HelloWorld.cls', description: 'Package to put in xml file')
        booleanParam(name: 'DRY_RUN', defaultValue: false, description: 'Set to only print operations')
    }

    stages {
        stage('Inits') {
            steps {
                script {
                    xmlFile = "$WORKSPACE\\manifest\\package.xml"
                    pythonLog = 'error.log'
                    pythonPath = 'C:\\Users\\User\\AppData\\Local\\Microsoft\\WindowsApps\\python.exe'
                }
            }
        }
        stage('Set XML') {
            steps {
                script {
                    String xmlNamePlaceHolder = 'PLACE_HOLDER'
                    String pythonScript = "$WORKSPACE\\python\\sedXml.py"
                    echo "Setting XML $xmlFile $xmlNamePlaceHolder to $params.MEMBER_PACKAGE"
                    bat """
                        echo 'hello batch'
                        echo %CD%
                        echo %CD% > $pythonLog
                        dir $xmlFile
                        dir $pythonScript
                        dir $pythonPath
                        echo "========= xml file before sed ============="
                        type $xmlFile
                        echo "============"
                        set PATH="%PATH%;C:\\Users\\User\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Launcher\\;"
                        set python=$pythonPath
                        echo %python%
                        set
                        $pythonPath --version
                        $pythonPath $pythonScript 2>>&1 $pythonLog || exit
                        echo "========= xml file after sed ============="
                        type $xmlFile
                        echo "============"
                    """
                }
            }
        }
    }
    post {
        always {
            bat "wget -O console-output.log ${BUILD_URL}consoleText"
        }
        failure {
            archiveArtifacts artifacts: pythonLog
        }
    }
}